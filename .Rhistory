library("devtools")
install.packages("rjson")
library(rjson)
library("rjson")
help(sendToSWISSpalm)
}
#' @name sendToSWISSpalm
#' @title Send to SWISSpalm
#' @description Send protein identifiers to SWISSpalm
#' @param identifiers foo1
#' @param output.type foo2
#' @name sendToSWISSpalm
#' @title Send to SWISSpalm
#' @description Send protein identifiers to SWISSpalm
#' @param identifiers foo1
#' @param output.type foo2
#' @param output.dir foo3
#' @return Saves SWISSpalm output in specified user-specified output directory.
#' @name sendToSWISSpalm
#' @title Send to SWISSpalm
#' @description Send protein identifiers to SWISSpalm
#' @param identifiers foo1
#' @param output.type foo2
#' @param output.dir foo3
#' @return Saves SWISSpalm output in specified user-specified output directory.
#' @author Simon Parker  \email{tadeo5@hotmail.co.uk}
#' @export
#' @name sendToSWISSpalm
#' @title Send to SWISSpalm
#' @description Send protein identifiers to SWISSpalm
#' @param identifiers foo1
#' @param output.type foo2
#' @param output.dir foo3
#' @return Saves SWISSpalm output in specified user-specified output directory.
#' @author Simon Parker  \email{tadeo5@hotmail.co.uk}
#' @export
sendToSWISSpalm <- function(identifiers, output.type = "vec", output.dir){
#' @name sendToSWISSpalm
#' @title Send to SWISSpalm
#' @description Send protein identifiers to SWISSpalm
#' @param identifiers foo1
#' @param output.type foo2
#' @param output.dir foo3
#' @return Saves SWISSpalm output in specified user-specified output directory.
#' @author Simon Parker  \email{tadeo5@hotmail.co.uk}
#' @export
sendToSWISSpalm <- function(identifiers, output.type = "vec", output.dir){
if(missing(identifiers)) stop("You must provide protein identifiers.")
if(missing(output.dir)) stop("You must provide an output directory.")
message("Sending identifiers to SWISSpalm.")
message(paste0("Retrieving ", output.type, " from SWISSpalm."))
}
}
#' @name sendToSWISSpalm
#' @title Send to SWISSpalm
#' @description Send protein identifiers to SWISSpalm
#' @param identifiers foo1
#' @param output.type foo2
#' @param output.dir foo3
#' @return Saves SWISSpalm output in specified user-specified output directory.
#' @author Simon Parker  \email{tadeo5@hotmail.co.uk}
#' @export
sendToSWISSpalm <- function(identifiers, output.type = "vec", output.dir){
#' @name sendToSWISSpalm
#' @title Send to SWISSpalm
#' @description Send protein identifiers to SWISSpalm
#' @param identifiers foo1
#' @param output.type foo2
#' @param output.dir foo3
#' @return Saves SWISSpalm output in specified user-specified output directory.
#' @author Simon Parker  \email{tadeo5@hotmail.co.uk}
#' @export
sendToSWISSpalm <- function(identifiers, output.type = "vec", output.dir){
if(missing(identifiers)) stop("You must provide protein identifiers.")
if(missing(output.dir)) stop("You must provide an output directory.")
message("Sending identifiers to SWISSpalm.")
message(paste0("Retrieving ", output.type, " from SWISSpalm."))
}
help(sendToSWISSpalm)
??sendToSWISSpalm
rm(list = "sendToSWISSpalm")
n
help(toJSON)
document()
devtools::document()
swisspalm_json <- rjson::toJSON(list(ids = "identifiers",
dataset = 1,
species = 1,
output = "xlsx"))
rjson::fromJSON(swisspalm_json
)
rjson::fromJSON(swisspalm_json)
z <- rjson::fromJSON(swisspalm_json)
jsonlite::fromJSON(list(ids = "identifiers",
dataset = 1,
species = 1,
output = "xlsx"))
jsonlite::fromJSON(swisspalm_json)
jsonlite::fromJSON(swisspalm_json)$dataset
response <- httr::GET("https://www.swisspalm.org/")
devtools::document()
version(jsonlite)
version("jsonlite")
version
help(rjson)
help(httr)
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools;;check()
devtools::check()
devtools::check()
devtools::check()
devtools::document()
devtools::check()
devtools::document()
devtools::check()
devtools::check()
response <- httr::GET("https://www.swisspalm.org/")
devtools::check()
devtools::check()
typeof("typeof")
devtools::check()
help(GET)
devtools::document()
devtools::check()
checkmate::checkPathForOutput(x = tempfile(pattern = file.path("R", "test_file"), fileext = ".tmp"))
install.packages("checkmate")
checkmate::checkPathForOutput(x = tempfile(pattern = file.path("R", "test_file"), fileext = ".tmp"))
help(tempfile)
checkmate::checkPathForOutput(x = file.path("R", "test_file.csv"))
checkmate::checkPathForOutput(x = file.path("R",))
checkmate::checkPathForOutput(x = file.path("R"))
devtools::check()
devtools::check()
devtools::check()
help(httr)
help(rjson)
devtools::check()
help(GET)
usethis::create_github_token()
install.packages(gitcreds)
install.packages("gitcreds")
gitcreds::gitcreds_set()
gitcreds::gitcreds_set()
devtools::document()
devtools::document()
